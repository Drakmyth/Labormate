name: Package Release Publish

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_body:
        description: "Release notes/body (leave blank to use default template)"
        required: false
        default: ""

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.parse_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Parse TOC version number
        id: parse_version
        run: |
          VERSION=$(grep -E '^## Version:' Labormate.toc | sed -E 's/## Version:[[:space:]]*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.parse_version.outputs.version }}
          git push origin ${{ steps.parse_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package release
        id: package_release
        run: |
          mkdir -p release/Labormate
          cp *.lua *.toc *.xml release/Labormate/
          cp -r assets/ release/Labormate/assets/
          (cd release && zip -r ../Labormate-${{ steps.parse_version.outputs.version }}.zip Labormate/)

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: Labormate-${{ steps.parse_version.outputs.version }}.zip

  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Create GitHub release
        run: gh release create ${{ needs.package.outputs.version }} --fail-on-no-commits --generate-notes --verify-tag --repo Drakmyth/Labormate Labormate-${{ needs.package.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
