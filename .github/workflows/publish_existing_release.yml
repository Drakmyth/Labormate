name: Publish Existing Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Version/Tag of existing release
        required: true
      publish-to-curseforge:
        description: Publish release to CurseForge?
        required: false
        default: false
        type: boolean
      publish-to-wowinterface:
        description: Publish release to WoWInterface?
        required: false
        default: false
        type: boolean
      publish-to-wago:
        description: Publish release to Wago?
        required: false
        default: false
        type: boolean
      simulate:
        description: Simulate execution?
        required: false
        default: false
        type: boolean

defaults:
  run:
    shell: bash -e -o pipefail {0}

jobs:
  parse-release:
    runs-on: ubuntu-latest
    outputs:
      interface: ${{ steps.parse_interface.outputs.interface }}
      curseforgeid: ${{ steps.parse_curseforgeid.outputs.curseforgeid }}
      wowinterfaceid: ${{ steps.parse_wowinterfaceid.outputs.wowinterfaceid }}
      wagoid: ${{ steps.parse_wagoid.outputs.wagoid }}
    steps:
      - name: Download release
        run: gh release download ${{ inputs.tag }} -p "Labormate-${{ inputs.tag }}.zip" --repo Drakmyth/Labormate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release
        run: 

      - name: Parse TOC interface
        id: parse_interface
        run: |
          INTERFACE=$(grep -E '^## Interface:' Labormate.toc | sed -E 's/## Interface:[[:space:]]*//')
          echo "interface=$INTERFACE" >> $GITHUB_OUTPUT

      - name: Parse TOC CurseForge id
        id: parse_curseforgeid
        run: |
          CURSEFORGEID=$(grep -E '^## X-Curse-Project-ID:' Labormate.toc | sed -E 's/## X-Curse-Project-ID:[[:space:]]*//')
          echo "curseforgeid=$CURSEFORGEID" >> $GITHUB_OUTPUT

      - name: Parse TOC WoWInterface id
        id: parse_wowinterfaceid
        run: |
          WOWINTERFACEID=$(grep -E '^## X-WoWI-ID:' Labormate.toc | sed -E 's/## X-WoWI-ID:[[:space:]]*//')
          echo "wowinterfaceid=$WOWINTERFACEID" >> $GITHUB_OUTPUT

      - name: Parse TOC Wago id
        id: parse_wagoid
        run: |
          WAGOID=$(grep -E '^## X-Wago-ID:' Labormate.toc | sed -E 's/## X-Wago-ID:[[:space:]]*//')
          echo "wagoid=$WAGOID" >> $GITHUB_OUTPUT

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: Labormate-${{ inputs.tag }}.zip

      - name: Retrieve changelog
        id: retrieve_changelog
        run: gh release view ${{ inputs.tag }} --json body -q ".body" --repo Drakmyth/Labormate > changelog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: changelog.txt

  publish-curseforge:
    runs-on: ubuntu-latest
    needs: [parse-release]
    if: ${{ inputs.publish-to-curseforge }}
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Retrieve game version id
        id: retrieve_versionid
        run: |
          INTERFACE="${{ needs.parse-release.outputs.interface }}"
          curl -s -f -X GET "https://wow.curseforge.com/api/game/versions" \
            -H "x-api-token: ${{ secrets.CURSEFORGE_API_TOKEN }}" > versions.json
          VERSIONID=$(jq \
            --arg interface "$INTERFACE" \
            -r '.[] | select(.apiVersion == $interface) | .id' versions.json)
          echo "versionid=$VERSIONID" >> $GITHUB_OUTPUT

      - name: Publish to CurseForge
        if: ${{ !inputs.simulate }}
        run: |
          CHANGELOG=$(cat changelog.txt)
          JSON=$(jq -n \
            --arg changelog "$CHANGELOG" \
            --arg changelog_type "markdown" \
            --arg display_name "${{ inputs.tag }}" \
            --argjson game_versions "[${{ steps.retrieve_versionid.outputs.versionid }}]" \
            --arg release_type "release" \
            '{changelog: $changelog, changelogType: $changelog_type, displayName: $display_name, gameVersions: $game_versions, releaseType: $release_type}')
          curl -f -X POST "https://wow.curseforge.com/api/projects/${{ needs.parse-release.outputs.curseforgeid }}/upload-file" \
            -H "x-api-token: ${{ secrets.CURSEFORGE_API_TOKEN }}" \
            -F "file=@Labormate-${{ inputs.tag }}.zip" \
            -F "metadata=$JSON"
        env:
          CURSEFORGE_API_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}

  publish-wowinterface:
    runs-on: ubuntu-latest
    needs: [parse-release]
    if: ${{ inputs.publish-to-wowinterface }}
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Retrieve game version
        id: retrieve_version
        run: |
          INTERFACE="${{ needs.parse-release.outputs.interface }}"
          curl -s -f -X GET "https://api.wowinterface.com/addons/compatible.json" > versions.json
          VERSION=$(jq \
            --arg interface "$INTERFACE" \
            -r '.[] | select(.interface == $interface) | .id' versions.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish to WoWInterface
        if: ${{ !inputs.simulate }}
        run: |
          CHANGELOG=$(cat changelog.txt)
          curl -f -X POST "https://api.wowinterface.com/addons/update" \
            -H "x-api-token: ${{ secrets.WOWINTERFACE_API_TOKEN }}" \
            -H "accept: application/json" \
            -F "id=${{ needs.parse-release.outputs.wowinterfaceid }}" \
            -F "version=${{ inputs.tag }}" \
            -F "changelog=$CHANGELOG" \
            -F "updatefile=@Labormate-${{ inputs.tag }}.zip"
        env:
          WOWINTERFACE_API_TOKEN: ${{ secrets.WOWINTERFACE_API_TOKEN }}

  publish-wago:
    runs-on: ubuntu-latest
    needs: [parse-release]
    if: ${{ inputs.publish-to-wago }}
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Retrieve game version via CurseForge
        id: retrieve_version
        run: |
          INTERFACE="${{ needs.parse-release.outputs.interface }}"
          curl -s -f -X GET "https://wow.curseforge.com/api/game/versions" \
            -H "x-api-token: ${{ secrets.CURSEFORGE_API_TOKEN }}" > versions.json
          VERSION=$(jq \
            --arg interface "$INTERFACE" \
            -r '.[] | select(.apiVersion == $interface) | .name' versions.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish to Wago
        if: ${{ !inputs.simulate }}
        run: |
          CHANGELOG=$(cat changelog.txt)
          JSON=$(jq -n \
            --arg label "${{ inputs.tag }}" \
            --arg stability "stable" \
            --arg changelog "$CHANGELOG" \
            --arg supported_retail_patch "${{ steps.retrieve_version.outputs.version }}" \
            '{label: $label, stability: $stability, changelog: $changelog, supported_retail_patch: $supported_retail_patch}')
          curl -f -X POST "https://addons.wago.io/api/projects/${{ needs.parse-release.outputs.wagoid }}/version" \
            -H "authorization: Bearer ${{ secrets.WAGO_API_TOKEN }}" \
            -H "accept: application/json" \
            -F "file=@Labormate-${{ inputs.tag }}.zip" \
            -F "metadata=$JSON"
        env:
          WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}